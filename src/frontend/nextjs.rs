use std::fs;
use std::io;
use std::io::Write;

use crate::commands::SetupCmd;
use crate::frontend::css::TailwindCSS;
use crate::setup::InitArgs;
use crate::utils::PackageJson;

pub struct Nextjs;

impl Nextjs {
    pub fn bootstrap(init_args: InitArgs) {
        SetupCmd::CreateNextApp.run(Some(&init_args.project_name), None);
        SetupCmd::FrontendDeps.run(None, Some(&init_args.workdir));
        SetupCmd::TailwindDeps.run(None, Some(&init_args.workdir));
        SetupCmd::TailwindInit.run(None, Some(&init_args.workdir));
        TailwindCSS::setup_tailwind_config(init_args.workdir.clone());

        TailwindCSS::create_tailwindcss_files(init_args.workdir.clone())
            .expect("Failed to make TailwindCSS files");
        Nextjs::create_page_files(init_args.workdir.clone()).expect("Failed to make NextJS files");
        Nextjs::create_config_file(init_args.workdir.clone())
            .expect("Failed to set up the nextjs config file");

        let mut packagejson_filepath = init_args.workdir;

        packagejson_filepath.push_str("/package.json");

        PackageJson::from_json(&packagejson_filepath)
            .add_data()
            .write_to_file(&packagejson_filepath)
            .expect("Failed to write to package.json");
    }

    pub fn create_page_files(mut workdir: String) -> io::Result<()> {
        let mut dir_to_delete = workdir.clone();

        dir_to_delete.push_str("/src/pages/api");

        fs::remove_dir_all(&dir_to_delete)
            .expect("Failed to delete the default Next.js API folder");

        workdir.push_str("/src/pages/index.tsx");

        let mut f = fs::File::create(&workdir).expect("Failed to recreate the index file");

        f.write_all(NEXTJS_HOMEPAGE_FILE.as_bytes())?;

        Ok(())
    }

    pub fn create_config_file(mut workdir: String) -> io::Result<()> {
        workdir.push_str("/next.config.js");

        let mut f = fs::File::create(&workdir).expect("Couldn't remake the next.config.js file :(");

        f.write_all(NEXTJS_CONFIG_FILE.as_bytes())?;

        Ok(())
    }
}

const NEXTJS_HOMEPAGE_FILE: &str = r#"import Head from 'next/head'
import styles from '@/styles/globals.css'
import Link from 'next/link'

export default function Home() {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
      <main className="h-screen w-screen">
      <nav className="flex flex-row items-center justify-between h-14 w-full bg-stone-500/50 p-5">
        <Link href="/">Milkmilk.</Link>
        </nav>
        <div className= "h-[calc(100%-3.5rem)] w-full flex flex-col justify-center items-center gap-20 bg-stone-300">
              <div className="text-center">
          <h1 className="text-2xl lg:text-5xl">Milkmilk.rs</h1>
          <p className="">Go full-stack, faster.</p>
    </div>
                <div className="grid grid-cols-2 grid-rows-2 w-1/3 h-1/3 gap-4 ">
          <div className="w-full col-span-1 row-span-1 shadow-md rounded-md flex flex-row justify-center items-center bg-stone-200 hover:bg-stone-400 transition-all">Frontend: Next.js.</div>
          <div className="w-full col-span-1 row-span-1 shadow-md rounded-md flex flex-row justify-center items-center bg-stone-200 hover:bg-stone-400 transition-all">Backend: Axum.</div>
          <div className="w-full col-span-1 row-span-1 shadow-md rounded-md flex flex-row justify-center items-center bg-stone-200 hover:bg-stone-400 transition-all">Learn more about Rust here.</div>
          <div className="w-full col-span-1 row-span-1 shadow-md rounded-md flex flex-row justify-center items-center bg-stone-200 hover:bg-stone-400 transition-all">Check out the repo for this project!</div>

    </div>
        </div>
      </main>
    </>
  )
}"#;

const NEXTJS_CONFIG_FILE: &str = r#"/** @type {import('next').NextConfig} */
const nextConfig = {
  reactStrictMode: true,
  trailingSlash: true,
}

module.exports = nextConfig
"#;
